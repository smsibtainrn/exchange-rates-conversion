plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.smsrn.exchangerate'
    compileSdk 34

    defaultConfig {
        applicationId "com.smsrn.exchangerate"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "EXCHANGE_RATE_ENDPOINT", "\"https://openexchangerates.org/api/\""
            buildConfigField "String", "EXCHANGE_RATE_API_KEY", "\"c23eede1373042c6973f9edeeab9292c\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "EXCHANGE_RATE_ENDPOINT", "\"https://openexchangerates.org/api/\""
            buildConfigField "String", "EXCHANGE_RATE_API_KEY", "\"c23eede1373042c6973f9edeeab9292c\""
        }
    }
    buildFeatures {
        dataBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

kapt {
    correctErrorTypes true
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.activity:activity-ktx:1.5.1"
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.intuit.sdp:sdp-android:1.1.0'
    implementation "com.airbnb.android:lottie:$lottie_version"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"
    implementation "com.google.android.material:material:1.10.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-testing:$androidx_lifecycle_version"
    
    testImplementation "io.mockk:mockk:1.9"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation 'org.mockito:mockito-inline:2.25.0'
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    testImplementation "androidx.test:core:$test_core_version"
    testImplementation "androidx.test.ext:junit-ktx:$test_ext_version"
    testImplementation "androidx.test.ext:junit:$test_ext_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${coroutines_test_version}"
    testImplementation "androidx.room:room-testing:$room_version"
    testImplementation "org.robolectric:robolectric:${robolectric_version}"
    testImplementation "androidx.room:room-testing:$room_version"
    testImplementation 'junit:junit:4.13.2'
    
    androidTestImplementation "io.mockk:mockk-android:1.9"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}